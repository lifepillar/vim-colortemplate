*libpath.txt*	For Vim version 9.0	Last change: 2023 Mar 25

A collection of functions to simplify working with paths in Vim. To use,
simply import the library. Paths are just strings. For example:
>
	import 'libpath' as path

	echo path.IsDirectory($VIMRUNTIME)

Functions ~

Basename({path})			*libpath.Basename()*
		Return the last component of {path} (after first stripping all
		trailing path separators).

Children({path}[, {glob}])			*libpath.Children()*
		Return the children of {path} (files and directories, not
		recursively). Return only those matching the {glob} pattern if
		{glob} is provided. See also |glob()|.

Clean({path})				*libpath.Clean()*
		Simplify a path. Like |simplify()|, but also removes any
		trailing slashes, if present.

Contains({path}, {subpath}[, {base}])	*libpath.Contains()*
		Return |true| if {subpath} is contained within {path} or is
		the same as {path}; return |false| otherwise. The comparison
		is done after expanding the paths to absolute paths, relative
		to {base} if given or relative to |getcwd()| otherwise, as in
		|libpath.Expand()|.

Exists({path})				*libpath.Exists()*
		Return |true| if {path} exists, |false| otherwise. See also
		|filereadable()| and |isdirectory()|.

Expand({path}[, {base}])		*libpath.Expand()*
		Convert {path} into an absolute path. Relative paths are
		referenced from the current working directory (see
		|getcwd()|) unless {base} is not empty, in which case it will
		be used as the starting point.

Extname({path})			*libpath.Extname()*
		Return the extension of {path}, that is, the portion of file
		name in {path} starting from the last period.

IsAbsolute({path})			*libpath.IsAbsolute()*
		Return |true| if {path} is absolute, |false| otherwise. See
		also |isabsolutepath()|.

IsDirectory({path})			*libpath.IsDirectiry()*
		Return |true| if {path} exists and is a directory, |false|
		otherwise. See also |isdirectory()|.

IsExecutable({path})			*libpath.IsExecutable()*
		Return |true| if {path} is an executable path, |false|
		otherwise. See also |exepath()|.

IsReadable({path})			*libpath.IsReadable()*
		Return |true| if {path} is a file that can be read or
		a directory whose content can be accessed. Return |false|
		otherwise.

IsRelative({path})			*libpath.IsRelative()*
		Return |false| if {path} is absolute, |true| otherwise. See
		also |isabsolutepath()|.

IsWritable({path})			*libpath.IsWritable()*
		Return |true| if {path} is a file or directory that exists and
		can be written. See also |filewritable()|.

Parent({path})				*libpath.Parent()*
		Return all components of {path} except the last one (after
		first stripping all trailing path separators).

Join({path}[, ...{paths}])		*libpath.Join()*
		Join {path} with zero or more other {paths}.

Parts({path})				*libpath.Parts()*
		Split {path} into the |list| of its components. See also
		|libpath.Split()|.

Split({path})				*libpath.Split()*
		Split {path} into a directory and a file component, and return
		a two-element |list|. See also |libpath.Parent()|,
		|libpath.Basename()|, and |libpath.Parts()|.

Stem({path})				*libpath.Stem()*
		Return the root of the last component of {path} (after first
		stripping all trailing path separators), that is, the name
		without the extension.

 vim:tw=78:ts=8:noet:ft=help:norl:

